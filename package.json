{
    "name": "megaproject",
    "version": "1.0.0",
    "private": true,
    "scripts": {
      "build": "npm run build --prefix frontend && npm run build --prefix backend",
      "start": "concurrently \"npm run server\" \"npm run client\"",
      "server": "node backend/server.js",
      "client": "npm run serve --prefix frontend",
      "commit": "node -e \"const execSync = require('child_process').execSync; const readline = require('readline'); const rl = readline.createInterface({ input: process.stdin, output: process.stdout }); rl.question('Enter your commit message: ', (message) => { rl.close(); const commands = ['npm run build', 'git add .']; try { execSync('git diff-index --quiet HEAD --'); console.log('No changes to commit.'); } catch (e) { commands.push(`git commit -m \\\"${message}\\\"`); commands.push('git push origin main'); } try { execSync('git worktree remove gh-pages --force', { stdio: 'inherit', shell: true }); } catch (error) { console.log('No existing worktree to remove.'); } commands.push('git worktree add -B gh-pages gh-pages origin/gh-pages'); commands.forEach((cmd) => { try { execSync(cmd, { stdio: 'inherit', shell: true }); } catch (error) { console.error('Failed to execute command:', cmd, '\\n', error); process.exit(1); } }); try { execSync('xcopy frontend/dist gh-pages /E /H /C /I /Y', { stdio: 'inherit', shell: true }); execSync('cd gh-pages && git add . && git commit -m \\\"Deploy to gh-pages\\\" && git push origin gh-pages', { stdio: 'inherit', shell: true }); } catch (error) { console.error('Failed to execute deployment commands:', '\\n', error); process.exit(1); } });\""
    },
    "dependencies": {
      "body-parser": "^1.20.2",
      "cors": "^2.8.5",
      "express": "^4.19.2",
      "mongoose": "^8.5.1",
      "concurrently": "^7.0.0"
    },
    "devDependencies": {}
  }
  